输入: [0,1,2,4,5,7]
输出: ["0->2","4->5","7"]
class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        vector<int> st(nums.size(),0);
        vector<string> su;
        //st.push_back('0'+nums[0]);
        for(int i=1;i<nums.size();i++){
            if(nums[i]==nums[i-1]+1){
                st[i]=st[i-1]+1;
                st[i-1]=0;
            }
        }
        for(int j=nums.size()-1;j>=0;j--){
            if(st[j]==0){
                su.insert(su.begin(),to_string(nums[j]));//不可使用push_front();
            }else{
                su.insert(su.begin(),to_string(nums[j-st[j]])+"->"+to_string(nums[j]));
                j=j-st[j];
            }
        }
        return su;
    }
};

//别人优秀数组区间思想：
为什么写成这样就超时？？//不知道；

            while(right+1<nums.size() && nums[right+1]-nums[right]==1){
                right++;
            }
c++正确代码

class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
         vector<string> res;
        if(nums.empty()) return res;
        for(int i=0; i<nums.size();){
            int left=i;
            int right=i;
            while(right+1<nums.size() && nums[right+1]==nums[right]+1){
                right++;
            }
            if(right-left>0){
                res.push_back(to_string(nums[left])+"->"+ to_string(nums[right]));
            }
            else if(right-left==0){
                res.push_back(to_string(nums[right]));
            }
            i=right+1;
        }
        return res;
    }
};
